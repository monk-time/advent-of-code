[project]
name = "advent-of-code"
version = "0.1.0"
description = "Solutions for the Advent of Code programming challenges"
readme = "README.md"
requires-python = ">=3.14"
dependencies = [
    "networkx>=3.5",
    "pillow>=12.0.0",
    "psutil>=7.1.1",
    "requests>=2.32.5",
]

[dependency-groups]
dev = [
    "pytest-xdist>=3.8.0",
    "pytest>=8.4.2",
]

[tool.pytest.ini_options]
pythonpath = [
    "year2018",
    "year2019",
    "year2020",
]
addopts="-n auto"

[tool.ruff]
target-version = "py314"
line-length = 79
preview = true
output-format = "concise" # preview mode switches this to full
src = ["./*"] # fix first-party imports

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D1",      # pydocstyle                  (allow missing docstrings)
    "ANN",     # flake8-annotations          (demands type annotations)
    "S",       # flake8-bandit               (security testing)
    "COM",     # flake8-commas               (conflicts with formatter)
    "CPY",     # flake8-copyright            (demands copyright notices)
    "Q",       # flake8-quotes               (conflicts with formatter)
    "T20",     # flake8-print                (prohibits print statements)
    "ISC001",  # single-line-implicit-string-concatenation (conflicts with formatter)
    "PGH003",  # blanket-type-ignore         (PyLance doesn't provide error codes)
    "B905",    # zip-without-explicit-strict (makes zip too bulky)
    "E731",    # lambda-assignment           (precludes a concise functional style)
    "PLC0415", # import-outside-top-level    (sometimes imports in a function are necessary)
    "PLR2004", # magic-value-comparison      (demands too many constants)
    "DOC201",  # docstring-missing-returns   (excessive documentation)
    "DOC402",  # docstring-missing-yields    (excessive documentation)
]
allowed-confusables = [
    "а", "б", "в", "г", "е", "з", "и", "к", "м", "н", "о", "р", "с", "у", "ф", "х",
    "А", "Б", "В", "Г", "Е", "З", "И", "К", "М", "Н", "О", "Р", "С", "У", "Ф", "Х",
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.flake8-pytest-style]
parametrize-names-type = "csv"
parametrize-values-type = "tuple"

[tool.ruff.format]
quote-style = "single"
